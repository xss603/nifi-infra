
- name: Add a line to a file
  ansible.builtin.lineinfile:
    path: /etc/hosts
    line: |
      nifi-01 34.77.4.18
      nifi-02 146.148.9.63
      nifi-03 35.187.94.191
    create: yes
    
- name: Create nifi group
  group:
    name: "{{ nifi_group }}"
    state: present
  tags:
  - install
- name: Create nifi user
  user:
    name: "{{ nifi_user }}"
    group: "{{ nifi_group }}"
  tags:
  - install
- name: Create directory for nifi
  file:
    path: "{{ nifi_home_dir }}"
    state: directory
    owner: "{{ nifi_user }}"
    group: "{{ nifi_group }}"
  tags:
  - install

- name: Create nifi internals directories
  file:
    path: "{{ nifi_home_dir }}/data/{{ item }}"
    state: directory
    owner: "{{ nifi_user }}"
    group: "{{ nifi_group }}"
  loop:
    - content_repository
    - database_repository
    - flowfile_repository
    - logs
    - provenance_repository
    - state
    - nar_extensions
  tags:
  - install

- name: Create nifi conf dir
  file:
    path: "{{ nifi_home_dir }}/{{ item }}"
    state: directory
    owner: "{{ nifi_user }}"
    group: "{{ nifi_group }}"
  loop:
    - conf
    - tls
  tags:
  - install
  - config
- name: remove old packages
  become: true
  shell: "rm -rf {{ nifi_home_dir  }}/nifi-*.zip"

- name: download packages nifi
  become: true
  shell: "cd {{ nifi_home_dir  }} &&  curl  https://dlcdn.apache.org/nifi/2.0.0/nifi-2.0.0-bin.zip -o nifi-2.0.0-bin.zip"
- name: download packages nifi
  become: true
  shell: "cd {{ nifi_home_dir  }} &&  curl  https://dlcdn.apache.org/nifi/2.0.0/nifi-toolkit-2.0.0-bin.zip -o nifi-toolkit-2.0.0-bin.zip"

# wnload nifi: {{ nifi_version }}"
# rue
# uiltin.get_url:
# { nifi_package_url }}"
# {{ nifi_home_dir  }}/nifi-{{ nifi_version }}-bin.zip"
# "{{ nifi_user }}"
# "{{ nifi_group }}"
# 
# 
# 
# wnload nifi-toolkit: {{ nifi_version }}"
# uiltin.get_url:
# { nifi_package_url }}"
# {{ nifi_home_dir  }}/nifi-toolkit-{{ nifi_version }}-bin.zip"
# "{{ nifi_user }}"
# "{{ nifi_group }}"
# 
# 

- name: Inflate nifi zip
  ansible.builtin.unarchive:
    remote_src: yes
    src: "/opt/nifi/nifi-2.0.0-bin.zip"
    dest: "{{ nifi_home_dir  }}"
    mode: 0750
    owner: "{{ nifi_user }}"
    group: "{{ nifi_group }}"
  tags:
  - install
  - debug
- name: Inflate nifi-toolkit zip
  ansible.builtin.unarchive:
    remote_src: yes
    src: "{{ nifi_home_dir  }}/nifi-toolkit-{{ nifi_version }}-bin.zip"
    dest: "{{ nifi_home_dir  }}"
    mode: 0750
    owner: "{{ nifi_user }}"
    group: "{{ nifi_group }}"
  tags:
  - install
  - debug

- name: Add authorizations.xml
  template:
    src: authorizations.xml.j2
    dest: "{{ nifi_home_dir }}/conf/authorizations.xml"
    owner: "{{ nifi_user }}"
    group: "{{ nifi_group }}"
  tags:
  - config
- name: Add users.xml
  template:
    src: users.xml.j2
    dest: "{{ nifi_home_dir }}/conf/users.xml"
    owner: "{{ nifi_user }}"
    group: "{{ nifi_group }}"
  tags:
  - config
- name: Add authorizers.xml
  template:
    src: authorizers.xml.j2
    dest: "{{ nifi_home_dir }}/conf/authorizers.xml"
    owner: "{{ nifi_user }}"
    group: "{{ nifi_group }}"
  tags:
  - config
- name: Add conf internals
  template:
    src: "{{ item.0 }}"
    dest: "{{ nifi_home_dir }}/conf/{{ item.1 }}"
    owner: "{{ nifi_user }}"
    group: "{{ nifi_group }}"
  loop:
    - ["bootstrap.conf.j2", "bootstrap.conf"]
    - ["logback.xml.j2", "logback.xml"]
    - ["login-identity-providers.xml.j2", "login-identity-providers.xml"]
    - ["state-management.xml.j2", "state-management.xml"]
    - ["nifi.properties.j2", "nifi.properties"]
  tags:
  - config